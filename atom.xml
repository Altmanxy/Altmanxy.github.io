<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>booker</title>
  
  
  <link href="https://altmanxy.github.io/atom.xml" rel="self"/>
  
  <link href="https://altmanxy.github.io/"/>
  <updated>2022-10-18T09:44:19.313Z</updated>
  <id>https://altmanxy.github.io/</id>
  
  <author>
    <name>altman</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>宝塔+青龙+JD库</title>
    <link href="https://altmanxy.github.io/2022/10/18/%E5%AE%9D%E5%A1%94-%E9%9D%92%E9%BE%99-JD%E5%BA%93/"/>
    <id>https://altmanxy.github.io/2022/10/18/%E5%AE%9D%E5%A1%94-%E9%9D%92%E9%BE%99-JD%E5%BA%93/</id>
    <published>2022-10-17T16:00:00.000Z</published>
    <updated>2022-10-18T09:44:19.313Z</updated>
    
    <content type="html"><![CDATA[<p>薅羊毛第一名</p><span id="more"></span><h3 id="1-服务器"><a href="#1-服务器" class="headerlink" title="1. 服务器"></a>1. 服务器</h3><ol><li>所有操作的前提都是先有一个服务器，没有的可以看前面文章自行获取服务器</li><li>服务器系统兼容性推荐：Centos7.x &gt; Debian10 &gt; Ubuntu 20.04 &gt; Centos8 stream &gt; Ubuntu 18.04 &gt; 其它系统</li><li>使用SSH连接工具连接服务器后，就可以进行安装宝塔面板了。</li></ol><h3 id="2-安装宝塔面板"><a href="#2-安装宝塔面板" class="headerlink" title="2. 安装宝塔面板"></a>2. 安装宝塔面板</h3><ol><li><p><a href="https://www.bt.cn/new/index.html">宝塔官网</a></p></li><li><p>安装前要保证服务器为纯净服务器，没有安装过任何环境与项目，如果安装了其他项目，安装宝塔后可能会有冲突</p></li><li><p>根据服务器系统选择安装的命令</p></li><li><p>安装完成后，打开提示的网站，登录即可</p>   <img src="/2022/10/18/%E5%AE%9D%E5%A1%94-%E9%9D%92%E9%BE%99-JD%E5%BA%93/1.png" class title="安装完成"></li><li><p>宝塔卸载命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#完全卸载整个面板及环境</span><br><span class="line">wget http://download.bt.cn/install/bt-uninstall.sh</span><br><span class="line">sh bt-uninstall.sh</span><br></pre></td></tr></table></figure></li></ol><h3 id="3-安装青龙面板"><a href="#3-安装青龙面板" class="headerlink" title="3. 安装青龙面板"></a>3. 安装青龙面板</h3><ol><li><p>安装宝塔后，需要安装一个docker容器，可以在宝塔后台直接搜索安装，也可以命令行安装。</p>   <img src="/2022/10/18/%E5%AE%9D%E5%A1%94-%E9%9D%92%E9%BE%99-JD%E5%BA%93/2.png" class title="搜索安装Docker"><hr><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker \</span><br><span class="line">            docker-engine \</span><br><span class="line">            docker.io            #卸载旧版本docker</span><br><span class="line">               </span><br><span class="line">apt-get update  #更新apt包索引</span><br><span class="line"></span><br><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg2 \</span><br><span class="line">    software-properties-common   #安装apt依赖包，用于通过HTTPS获取仓库</span><br><span class="line"></span><br><span class="line">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/debian/gpg | sudo apt-key add -    #添加Docker的官方GPG密钥</span><br><span class="line"></span><br><span class="line">sudo apt-key fingerprint 0EBFCD88  #0EBF CD88 通过搜索指纹的后8个字符，验证您现在是否拥有带有指纹的密钥。</span><br><span class="line"></span><br><span class="line">sudo add-apt-repository \</span><br><span class="line">   &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/debian \</span><br><span class="line">  $(lsb_release -cs) \</span><br><span class="line">  stable&quot;       #使用指令设置稳定版仓库</span><br><span class="line">  </span><br><span class="line">  apt-get update  #更新apt包索引</span><br><span class="line">  </span><br><span class="line">  sudo apt-get install docker-ce docker-ce-cli containerd.io  #安装最新版本的 Docker Engine-Community 和 containerd</span><br></pre></td></tr></table></figure><pre><code>    &#123;% asset_img 3.png 测试Docker是否安装成功 %&#125;</code></pre></li><li><p>Docker常用命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl stop docker</span><br><span class="line">systemctl restart docker</span><br><span class="line">systemctl enable docker   #docker设置随服务器启动而自启动</span><br><span class="line">systemctl status docker</span><br><span class="line">docker images   #查看自己服务器docker镜像列表</span><br><span class="line">docker search 镜像  #搜索自己服务器的镜像</span><br><span class="line">docker pull 镜像:tag(tag可不加,不加默认最新版，加了指定版本) #拉取镜像</span><br><span class="line">docker run 镜像 #运行镜像</span><br><span class="line">docker ps  #查看运行的镜像</span><br></pre></td></tr></table></figure></li><li><p><a href="https://hub.docker.com/search?q=&type=image">docker镜像版本搜索</a></p></li><li><p>拉取青龙镜像&#x2F;更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull whyour/qinglong:latest</span><br></pre></td></tr></table></figure></li><li><p>启动青龙</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">   -v $PWD/ql/config:/ql/config \</span><br><span class="line">   -v $PWD/ql/log:/ql/log \</span><br><span class="line">   -v $PWD/ql/db:/ql/db \</span><br><span class="line">   -p 5700:5700 \</span><br><span class="line">   --name qinglong \</span><br><span class="line">   --hostname qinglong \</span><br><span class="line">   --restart always \</span><br><span class="line">   whyour/qinglong:latest</span><br></pre></td></tr></table></figure></li><li><p>到宝塔面板放行青龙端口5700</p> <img src="/2022/10/18/%E5%AE%9D%E5%A1%94-%E9%9D%92%E9%BE%99-JD%E5%BA%93/4.png" class title="放行端口"></li><li><p>登录青龙面板(<a href="http://ip+:5700)，账号：admin">http://ip+:5700)，账号：admin</a> 密码：adminadmin</p></li><li><p>登录后会初始化密码，需要自行查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it qinglong cat /ql/config/auth.json</span><br></pre></td></tr></table></figure><pre><code> &#123;% asset_img 5.png 查看密码 %&#125;</code></pre></li><li><p>添加JD定时任务库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ql repo https://github.com/KingRan/KR.git &quot;jd_|jx_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR&quot;</span><br></pre></td></tr></table></figure></li><li><p>JD定时规则：</p><blockquote><p>秒 分 时 天 月 周<br>各个单位之间分别以空格分割，建议设置为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">30 * * * * *</span><br></pre></td></tr></table></figure></blockquote></li><li><p>抓取ck码</p><blockquote><p>浏览器打开手机版京东<a href="https://m.jd.com/">m.jd.com</a>登录，F12打开调试，选择“网络”，登录后选择”log.git”，找到 pt_key和 pt_pin两个变量的值，将他们记录下来</p><img src="/2022/10/18/%E5%AE%9D%E5%A1%94-%E9%9D%92%E9%BE%99-JD%E5%BA%93/6.png" class title="抓取码"></blockquote></li><li><p>配置环境变量</p><blockquote><p>在面板的右上角看到环境变量这个选项，点击增加。在弹出的窗口中输入变量，名称为 JD_COOKIE ，值就是刚刚获取的 pt_key和 pt_pin两个变量，注意别搞反了（分号不可少）。</p><img src="/2022/10/18/%E5%AE%9D%E5%A1%94-%E9%9D%92%E9%BE%99-JD%E5%BA%93/7.png" class title="配置环境变量"></blockquote></li><li><p>设置推送，建议使用电报推送</p><blockquote><p>填写自己申请@BotFather的Token：export TG_BOT_TOKEN&#x3D;”523******:AAFbQ***********************QNdA”</p><p>填写 @getuseridbot 中获取到的纯数字ID：export TG_USER_ID&#x3D;”14********7”</p><p>以上内容都在配置文件中设置</p><img src="/2022/10/18/%E5%AE%9D%E5%A1%94-%E9%9D%92%E9%BE%99-JD%E5%BA%93/8.png" class title="设置推送"></blockquote></li><li><p>设置完成后手动运行定时任务库，看到以下内容说明运行成功，以后会按设定的时间自动运行</p><img src="/2022/10/18/%E5%AE%9D%E5%A1%94-%E9%9D%92%E9%BE%99-JD%E5%BA%93/9.png" class title="运行任务"></li></ol><h3 id="4-参考文献"><a href="#4-参考文献" class="headerlink" title="4. 参考文献"></a>4. 参考文献</h3><ol><li><a href="https://www.runoob.com/docker/debian-docker-install.html">Debian Docker 安装</a></li><li><a href="https://blog.csdn.net/m0_51607907/article/details/124155185">青龙面板【修改端口+修改密码】</a></li><li><a href="https://chenyan98.cn/2930.html">搭建青龙面板</a></li><li><a href="https://www.feiji.work/2021/411.html">青龙信息推送</a></li><li><a href="https://blog.csdn.net/qq_35424400/article/details/119279520">最详细的宝塔青龙面板搭建教程</a></li><li><a href="https://blog.csdn.net/qq_39221949/article/details/124183815">树莓派 青龙面板的安装（超详细）</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;薅羊毛第一名&lt;/p&gt;</summary>
    
    
    
    <category term="个人使用" scheme="https://altmanxy.github.io/categories/%E4%B8%AA%E4%BA%BA%E4%BD%BF%E7%94%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>SSR/V2/TRO</title>
    <link href="https://altmanxy.github.io/2022/10/14/ssr-v2-tro%E4%B9%8B%E6%89%93%E5%BC%80%E4%B8%96%E7%95%8C%E7%9A%84%E5%A4%A7%E9%97%A8/"/>
    <id>https://altmanxy.github.io/2022/10/14/ssr-v2-tro%E4%B9%8B%E6%89%93%E5%BC%80%E4%B8%96%E7%95%8C%E7%9A%84%E5%A4%A7%E9%97%A8/</id>
    <published>2022-10-13T16:00:00.000Z</published>
    <updated>2022-10-14T10:11:00.829Z</updated>
    
    <content type="html"><![CDATA[<p>三者择一，世界在手</p><span id="more"></span><h3 id="1-购买VPS"><a href="#1-购买VPS" class="headerlink" title="1. 购买VPS"></a>1. 购买VPS</h3><blockquote><ul><li>购买海外<a href="https://www.vultr.com/">vps</a></li><li>自行注册登录</li><li>选择服务器配置（建议系统选Debian11），部署服务器</li><li>拿到服务器IP，先ping一下是否正常，不正常部署新的</li></ul></blockquote><h3 id="2-连接服务器"><a href="#2-连接服务器" class="headerlink" title="2. 连接服务器"></a>2. 连接服务器</h3><ul><li>可选xshell、crt工具进行连接</li></ul><h3 id="3-SSR一键脚本"><a href="#3-SSR一键脚本" class="headerlink" title="3. SSR一键脚本"></a>3. SSR一键脚本</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh&amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure><ul><li>安装可直接全部默认，一直回车即可</li><li>安装完成后配置SSR链接即可上网</li><li>如果SSR成功安装，但是不能正常启动，在centOS中主要原因是缺少python环境，利用以下指令进行安装<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install python36</span><br><span class="line">cd /usr/bin</span><br><span class="line">ln -s python3 python</span><br></pre></td></tr></table></figure></li><li>安装谷歌BBR加速软件<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</span><br><span class="line">chmod +x bbr.sh</span><br><span class="line">./bbr.sh</span><br></pre></td></tr></table></figure></li><li>安装完成后重启服务器</li><li>查询BBR是否成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure><img src="/2022/10/14/ssr-v2-tro%E4%B9%8B%E6%89%93%E5%BC%80%E4%B8%96%E7%95%8C%E7%9A%84%E5%A4%A7%E9%97%A8/1.png" class title="查询BBR"></li><li>如果使用SSR无法连接网络，则可能是centOS未开放相关端口，接下来查询并开启端口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --list-ports</span><br><span class="line">firewall-cmd --zone=public --add-port=2333/tcp --permanent</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="4-V2ray一键脚本"><a href="#4-V2ray一键脚本" class="headerlink" title="4. V2ray一键脚本"></a>4. V2ray一键脚本</h3></li><li>安装时间同步组件ntp<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp #CentOS/Fedora</span><br><span class="line">apt install ntp -y #Debian/Ubuntu</span><br></pre></td></tr></table></figure></li><li>V2Ray 一键安装脚本 &amp; 管理脚本 By 233v2.com<blockquote><ul><li>安装 Curl 依赖包<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update -y &amp;&amp; yum install curl -y #CentOS/Fedora</span><br><span class="line">apt-get update -y &amp;&amp; apt-get install curl -y #Debian/Ubuntu</span><br></pre></td></tr></table></figure></li></ul></blockquote></li></ul><blockquote><ul><li>执行V2Ray一键安装脚本命令<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>搭建脚本完成后，输入“v2ray url”可生成 vmess URL 链接将生成的 Vmess URL 添加到 V2Ray 客户端无法直接进行科学上网，需要手动放行服务器端口<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看已放行的端口：firewall-cmd --list-ports</span><br><span class="line">放行服务器端口：firewall-cmd --zone=public --add-port=1688/tcp --permanent</span><br><span class="line">关闭服务器端口：firewall-cmd --zone=public --remove-port=1688/tcp --permanent</span><br><span class="line">重启防火墙：firewall-cmd --reload</span><br></pre></td></tr></table></figure></li><li>常用V2命令：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">v2ray info 查看 V2Ray 配置信息</span><br><span class="line">v2ray config 修改 V2Ray 配置</span><br><span class="line">v2ray link 生成 V2Ray 配置文件链接</span><br><span class="line">v2ray infolink 生成 V2Ray 配置信息链接</span><br><span class="line">v2ray qr 生成 V2Ray 配置二维码链接</span><br><span class="line">v2ray ss 修改 Shadowsocks 配置</span><br><span class="line">v2ray ssinfo 查看 Shadowsocks 配置信息</span><br><span class="line">v2ray ssqr 生成 Shadowsocks 配置二维码链接</span><br><span class="line">v2ray status 查看 V2Ray 运行状态</span><br><span class="line">v2ray start 启动 V2Ray</span><br><span class="line">v2ray stop 停止 V2Ray</span><br><span class="line">v2ray restart 重启 V2Ray</span><br><span class="line">v2ray log 查看 V2Ray 运行日志</span><br><span class="line">v2ray update 更新 V2Ray</span><br><span class="line">v2ray update.sh 更新 V2Ray 管理脚本</span><br><span class="line">v2ray uninstall 卸载 V2Ray</span><br></pre></td></tr></table></figure></li></ul><h3 id="5-Trojan一键脚本"><a href="#5-Trojan一键脚本" class="headerlink" title="5. Trojan一键脚本"></a>5. Trojan一键脚本</h3><ul><li>Trojan搭建流程稍有不同，因为它多了一个搭建伪装网站的步骤。</li><li>由于涉及到伪装网站的搭建，以及SSL证书的申请，需要提前购买一个域名，指向VPS服务器IP地址。<br>购买域名时，可以考虑国外的Namesilo或Godaddy。</li><li>Trojan一键安装脚本：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/xxxbrian/trojan.sh/main/trojan.sh &amp;&amp; chmod +x trojan.sh &amp;&amp; ./trojan.sh</span><br></pre></td></tr></table></figure><blockquote><ul><li>安装 Curl 依赖包<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum update -y &amp;&amp; yum install curl -y #CentOS/Fedora</span><br><span class="line">apt-get update -y &amp;&amp; apt-get install curl -y #Debian/Ubuntu</span><br></pre></td></tr></table></figure></li></ul></blockquote></li><li>安装BBR加速<blockquote><ul><li>安装 wget 依赖包<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wget #CentOS</span><br><span class="line">apt-get install wget #Ubuntu/Debian</span><br></pre></td></tr></table></figure></li></ul></blockquote></li></ul><blockquote><ul><li>安装BBR加速命令<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/src &amp;&amp; wget -N --no-check-certificate &quot;https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure></li></ul></blockquote><ul><li>重启后再次执行安装命令，选择“7”启用“使用BBRplus版加速”。</li></ul><hr><p>参考资料：<br><a href="https://github.com/yukaiji/buildVpn">yukaiji&#x2F;buildVpn: 图文教程搭建一个vpn翻墙 </a><br><a href="https://iyideng.net/black-technology/cgfw/vmess-v2ray-server-building-and-using-tutorial.html">一键搭建V2Ray服务器教程2022使用 Vultr VPS 自建V2Ray节点机场及客户端配置多用户实现科学上网 - 一灯不是和尚</a><br><a href="https://trojan.bojin.co/">trojan.sh | Trojan一键安装脚本 (bojin.co)</a><br><a href="https://iyideng.net/black-technology/cgfw/trojan-server-building-and-using-tutorial.html">Trojan一键搭建教程2022使用 Vultr VPS 自建Trojan&#x2F;Trojan-Go服务器及客户端配置多用户实现科学上网 - 一灯不是和尚 (iyideng.net)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;三者择一，世界在手&lt;/p&gt;</summary>
    
    
    
    <category term="个人使用" scheme="https://altmanxy.github.io/categories/%E4%B8%AA%E4%BA%BA%E4%BD%BF%E7%94%A8/"/>
    
    
  </entry>
  
  <entry>
    <title>GitHub+hexo搭建博客</title>
    <link href="https://altmanxy.github.io/2022/10/13/GitHub-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>https://altmanxy.github.io/2022/10/13/GitHub-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-10-12T16:00:00.000Z</published>
    <updated>2022-10-13T09:28:50.107Z</updated>
    
    <content type="html"><![CDATA[<p>在博客搭建过程中的一些想法</p><span id="more"></span><ol><li>注册GitHub</li><li>安装hexo的组件<blockquote><p><a href="https://nodejs.org/zh-cn/">node.js</a><br><a href="https://git-scm.com/">Git</a></p></blockquote></li><li>安装完成后可以通过以下命令查询安装是否成功<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git version</span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></li><li>git配置ssh<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#设置Git的user name和email：</span><br><span class="line">git config --global user.name &#x27;用户名&#x27;</span><br><span class="line">git config --global user.email &#x27;邮箱&#x27;</span><br><span class="line">#生成 SSH KEY</span><br><span class="line">ssh-keygen -t rsa -C “邮箱”</span><br><span class="line">cat id_rsa.pub  #获取ssh</span><br></pre></td></tr></table></figure><img src="/2022/10/13/GitHub-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/1.png" class title="配置ssh"><blockquote><p>测试配置是否成功</p></blockquote></li></ol><p>ssh -T <a href="mailto:&#103;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#x6d;">&#103;&#105;&#116;&#64;&#x67;&#105;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#x6d;</a></p><blockquote><img src="/2022/10/13/GitHub-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/2.png" class title="配置成功"><ol start="5"><li>安装hexo</li></ol></blockquote><ul><li>在本地新建一个空文件夹存放博客，然后在该文件夹右键”GIT bash here”<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli   #安装hexo</span><br><span class="line">npm install hexo-deployer-git --save    #安装hexo部署到git page的deployer</span><br><span class="line">hexo init    #进行初始化在本地生成Hexo相关目录</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></li></ul><ol start="6"><li>创建GitHub仓库</li></ol><ul><li><p>在这里我没有像教程上新建的仓库，而是直接fork了别人的仓库，然后把名字再改成自己的名字<br><a href="https://github.com/kitian616/jekyll-TeXt-theme">fork对象</a></p></li><li><p>fork仓库后自己的仓库中会自动创建该仓库，只需要将名字改成符合要求的即可</p>   <img src="/2022/10/13/GitHub-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/3.png" class title="改名"><p><strong>名字格式必须为username.github.io</strong></p></li><li><p><strong>重点的一步</strong>，我在这一步折腾了两天才发现，教程全部是创建完仓库后点setting，然后改主题保存就会自动生成站点，但不知道GitHub页面是不是改版了，我到处找都找不到这个choose a theme按钮，搜索也没找到想要的结果。后来才发现貌似不需要选择主题，点击setting后点page，等几分钟之后就会自动生成site，复制到浏览器打开，能打开就说明成功了。</p><img src="/2022/10/13/GitHub-hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/4.png" class title="生成site"></li></ul><ol start="7"><li><p>选择hexo主题<br><a href="https://hexo.io/themes/">hexo主题</a>:点蓝色字体复制GitHub地址，在Git中clone下来，安装主题时需要阅读主题中的readme文件，按步骤操作即可</p></li><li><p>修改hexo根目录的_config.yml文件</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">url: https://altmanxy.github.io/ #填写自己Gitee Page的网站地址</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">## theme: landscape</span><br><span class="line">theme: hexo-theme-pure-master #填写自己的样式文件夹的名字</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:altmanxy/altmanxy.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><ol start="9"><li>宠物插件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-helper-live2d</span><br><span class="line">npm install live2d-widget-model-hijiki</span><br></pre></td></tr></table></figure><ul><li>配置_config.yml，找到deploy，添加以下代码<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#控制宠物样式和状态</span><br><span class="line">live2d:</span><br><span class="line">enable: true</span><br><span class="line">scriptFrom: local</span><br><span class="line">pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径)</span><br><span class="line">pluginJsPath: lib/ # 脚本文件相对与插件根目录路径</span><br><span class="line">pluginModelPath: assets/ # 模型文件相对与插件根目录路径</span><br><span class="line">tagMode: false # 标签模式, 是否仅替换 live2dtag标签而非插入到所有页面中</span><br><span class="line">log: false </span><br><span class="line">model:</span><br><span class="line">  use: live2d-widget-model-hijiki</span><br><span class="line">display:</span><br><span class="line">  position: right</span><br><span class="line">  width: 150</span><br><span class="line">  height: 300</span><br><span class="line">mobile:</span><br><span class="line">  show: true # 是否在移动设备上显示</span><br><span class="line">react:</span><br><span class="line">  opacity: 0.7</span><br></pre></td></tr></table></figure></li></ul><ol start="10"><li>博客文章显示图片<ul><li>配置_config.yml，<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder:false改为true</span><br><span class="line">npm install https://github.com/7ym0n/hexo-asset-image --save</span><br></pre></td></tr></table></figure></li></ul></li></ol><ul><li>插入图片时用这种方式：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img test.jpg This is an test image %&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;在博客搭建过程中的一些想法&lt;/p&gt;</summary>
    
    
    
    <category term="个人使用" scheme="https://altmanxy.github.io/categories/%E4%B8%AA%E4%BA%BA%E4%BD%BF%E7%94%A8/"/>
    
    
  </entry>
  
</feed>
